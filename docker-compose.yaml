version: "3.8"
services:
    
    # KeyCloak Auth Service
    keycloak:
      build:
        context: .
        dockerfile: keycloak/Dockerfile
      container_name: demo-keycloak
      environment:
        DB_VENDOR: "${DB_VENDOR}"
        DB_ADDR: "${DB_ADDR}" 
        KEYCLOAK_USER: "${KEYCLOAK_USER}"
        KEYCLOAK_PASSWORD: "${KEYCLOAK_PASSWORD}"
        DB_USER: "${DB_USER}"
        DB_PASSWORD: "${DB_PASSWORD}"
      ports:
        - 8180:8080
      depends_on:
        - postgres
      restart: always
      networks:
        - keycloak-network
    
    # Database for KeyCloak Auth Service
    postgres:
      image: postgres:latest
      container_name: postgres
      environment:
        POSTGRES_DB: "${POSTGRES_DB}"
        POSTGRES_USER: "${POSTGRES_USER}"
        POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      ports:
        - 3307:3306
      volumes:
        - ./postgres-data:/var/lib/postgresql/data
      restart: always
      networks:
        - keycloak-network
    
    # LDAP Service for federated Users
    ldap:
      build:
        context: ./ldap
        dockerfile: Dockerfile
      container_name: demo-ldap
      depends_on:
        - keycloak
      networks:
        - keycloak-network
    
    # Simple Mail Service for User Validation 
    mail:
      image: mailhog/mailhog
      container_name: demo-mail
      ports:
        - 8025:8025
      depends_on:
        - ldap
      networks:
        - keycloak-network

    # Sample Application Client for JWT Testing
    js-console:
      build:
        context: ./js-console
        dockerfile: Dockerfile
      ports:
        - 8000:80
      depends_on:
        - mail
      networks:
        - keycloak-network

networks:
  keycloak-network:
